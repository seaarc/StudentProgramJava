package studentProgram;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class StudentMain {

	public static Scanner scan = new Scanner(System.in);
	public static final int SUBJECTNUM = 3;
	public static final int INSERT = 1, PRINT = 2, SEARCH = 3, DELETE = 4, UPDATE = 5, SORT = 6, EXIT = 7;
	public static final int NAMEPATTERN = 1, IDPATTERN = 2, SCOREPATTERN = 3;
	public static final int MENU = 1, SEARCHITEM = 2, DELETEITEM = 3, UPDATEITEM = 4;
	
	public static void main(String[] args) {
		boolean flag = false;
		
		while(!flag) {			
			int menu = selectMenu(MENU);
			switch(menu) {
			case INSERT: StuModelIns(); break;
			case PRINT: StuModelPrt(); break;
			case SEARCH: StuModelSearch(); break;
			case DELETE: StuModelDel(); break;
			case UPDATE: StuModelUpdate(); break;
			case SORT: StuModelSort(); break;
			case EXIT: flag = true; break;
			default: System.out.println("¥ŸΩ√ Ω√µµ«œººø‰."); break;
			}
		}
	}
	
	// ∏ﬁ¥∫ º±≈√
	private static int selectMenu(int type) {
		boolean flag = false;
		int menu = 0;
		
		while(!flag) {
			// ∞¸∏Æ ∏ﬁ¥∫ √‚∑¬
			if(type == MENU) {				
				System.out.println("------------------------------------------------------------");
				System.out.println("\t \t   «–ª˝ º∫¿˚ ∞¸∏Æ «¡∑Œ±◊∑•");
				System.out.println("1. ¿‘∑¬   2. ¡∂»∏   3. ∞Àªˆ   4. ªË¡¶   5. ºˆ¡§   6. ¡§∑ƒ   7. ¡æ∑·");
				System.out.println("------------------------------------------------------------");
			// ∞Àªˆ ∏ﬁ¥∫ √‚∑¬
			}else if(type == SEARCHITEM) {
				System.out.println("1. ¿Ã∏ß¿∏∑Œ ∞Àªˆ   2. «–π¯¿∏∑Œ ∞Àªˆ   3. µπæ∆∞°±‚");
			// ªË¡¶ ∏ﬁ¥∫ √‚∑¬
			}else if(type == DELETEITEM) {
				System.out.println("1. ªË¡¶«“ «–ª˝¿« «–π¯ ¿‘∑¬   2. µπæ∆∞°±‚");
			// ¡°ºˆ ¡§¡§ ∏ﬁ¥∫ √‚∑¬
			}else if(type == UPDATEITEM) {
				System.out.println("1. ªÁ»∏«– ¡°ºˆ ¡§¡§   2. π∞∏Æ«– ¡°ºˆ ¡§¡§   3. ææÓ«– ¡°ºˆ ¡§¡§   4. µπæ∆∞°±‚");
			}
			System.out.print("∏ﬁ¥∫ º±≈√ >> ");
			
			try {				
				menu = Integer.parseInt(scan.nextLine());
			} catch(InputMismatchException e) {
				System.out.println("π¯»£∑Œ ¿‘∑¬«œººø‰.");
				continue;
			} catch(Exception e) {
				System.out.println("π¯»£∑Œ ¿‘∑¬«œººø‰.");
				continue;
			}
			
			// ∏ﬁ¥∫ø° æ¯¥¬ π¯»£∏¶ ¿‘∑¬«œ¥¬ ∞ÊøÏ∏¶ πÊ¡ˆ
			if(type == MENU && menu>=1 && menu <= 7) flag = true;
			else if(type == SEARCHITEM && menu>=1 && menu<=3) flag = true;
			else if(type == DELETEITEM && menu>=1 && menu<=2) flag = true;
			else if(type == UPDATEITEM && menu>=1 && menu<=4) flag = true;
			else System.out.println("¡∏¿Á«œ¥¬ «◊∏Ò π¯»£∏¶ ¿‘∑¬«œººø‰.");
		}
		
		return menu;
	}
	
	// µ•¿Ã≈Õ ¿‘∑¬ : «–ª˝ ¿Ã∏ß, «–π¯, ≥™¿Ã, º∫∫∞, ∞˙∏Ò∫∞ ¡°ºˆ(ªÁ»∏«–sociology, π∞∏Æ«–physics, ææÓ«–linguistics), √—¡°, ∆Ú±’, µÓ±ﬁ
	private static void StuModelIns() {
		String name = null;
		int id = 0;
		int age = 0;
		String gender = null;
		int sociology = 0;
		int physics = 0;
		int linguistics = 0;
		int total = 0;
		double avg = 0.0;
		char grade = '\u0000';
		
		// ¿Ã∏ß ¿‘∑¬
		while(true) {
			System.out.print("¿Ã∏ß ¿‘∑¬ >> ");
			name = scan.nextLine();
			if(patternCheck(name, NAMEPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		// «–π¯ ¿‘∑¬
		while(true) {
			System.out.print("«–π¯ 10¿⁄∏Æ ¿‘∑¬ >> ");
			id = Integer.parseInt(scan.nextLine());
			if(patternCheck(Integer.toString(id), IDPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		// «–π¯ ¡ﬂ∫π »Æ¿Œ
		List<StudentModel> list = new ArrayList<StudentModel>();
		list = DBController.stuModelSelect();
		if(list.size()>0) {
			for(StudentModel data : list) {
				if(id==data.getId()) {
					System.out.println("¡ﬂ∫πµ«¥¬ «–π¯¿Ã¥œ ¥ŸΩ√ ¿‘∑¬«œººø‰.");
					return;
				}
			}
		}
		
		// ≥™¿Ã ¿‘∑¬
		System.out.print("≥™¿Ã ¿‘∑¬ >> ");
		age = Integer.parseInt(scan.nextLine());
		
		// º∫∫∞ ¿‘∑¬
		while(true) {
			System.out.print("º∫∫∞ ¿‘∑¬(ø©¿⁄/≥≤¿⁄) >> ");
			gender = scan.nextLine();
			if(gender.equals("ø©¿⁄") || gender.equals("≥≤¿⁄")) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		// ∞˙∏Ò∫∞ ¡°ºˆ ¿‘∑¬ : ªÁ»∏«–sociology, π∞∏Æ«–physics, ææÓ«–linguistics
		while(true) {
			System.out.print("ªÁ»∏«– ¡°ºˆ >> ");
			sociology = Integer.parseInt(scan.nextLine());
			if(patternCheck(Integer.toString(sociology), SCOREPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		while(true) {
			System.out.print("π∞∏Æ«– ¡°ºˆ >> ");
			physics = Integer.parseInt(scan.nextLine());
			if(patternCheck(Integer.toString(physics), SCOREPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		while(true) {
			System.out.print("ææÓ«– ¡°ºˆ >> ");
			linguistics = Integer.parseInt(scan.nextLine());
			if(patternCheck(Integer.toString(linguistics), SCOREPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		// µ•¿Ã≈Õ∏¶ ª¿‘«“ ∏µ® ª˝º∫
		StudentModel stuModel = new StudentModel(name, id, age, gender, sociology, physics, linguistics, total, avg, grade);

		// √—¡°, ∆Ú±’, µÓ±ﬁ ªÍ¡§
		stuModel.calTotal();
		stuModel.calAvg();
		stuModel.calGrade();
		
		// µ•¿Ã≈Õ∫£¿ÃΩ∫ø° ¿˙¿Â
		int result = DBController.stuModelIns(stuModel);
		
		if(result != 0) System.out.println(stuModel.getName() + " √ﬂ∞° º∫∞¯");
		else System.out.println(stuModel.getName() + " √ﬂ∞° Ω«∆–");

	}
	
	// ∆–≈œ »Æ¿Œ
	private static boolean patternCheck(String patternData, int patternType) {
		String filter = null;
		switch(patternType) {
			case NAMEPATTERN: filter = "^[∞°-∆R]{2,5}$"; break;
			case IDPATTERN: filter = "([0-9]{10})"; break;
			case SCOREPATTERN: filter = "([0-9]{1,3})"; break;
		}
		
		Pattern pattern = Pattern.compile(filter);
		Matcher matcher = pattern.matcher(patternData);
		
		return matcher.matches();
	}

	// µ•¿Ã≈Õ ¡∂»∏
	private static void StuModelPrt() {
		List<StudentModel> list = new ArrayList<StudentModel>();
		
		list = DBController.stuModelSelect();
		
		// ¡∏¿Á ø©∫Œ »Æ¿Œ
		if(list.size()<=0) {
			System.out.println("µ•¿Ã≈Õ∞° æ¯Ω¿¥œ¥Ÿ.");
			return;
		}
		
		// ¿¸√º µ•¿Ã≈Õ √‚∑¬
		for (StudentModel data : list) {
			System.out.println(data);
		}
	}

	// µ•¿Ã≈Õ ∞Àªˆ
	private static void StuModelSearch() {
		final int NAMESEARCH = 1, IDSEARCH = 2, BACK = 3;
		List<StudentModel> list = new ArrayList<StudentModel>();
		String name = null;
		int id = 0;
		String searchData = null;	// ∞Àªˆµ» µ•¿Ã≈Õ
		int searchType = 0;			// ∞Àªˆµ» µ•¿Ã≈Õ¿« ≈∏¿‘
		
		// ∞Àªˆ «◊∏Ò º±≈√
		searchType = selectMenu(SEARCHITEM);
		switch(searchType) {
			// ¿Ã∏ß¿∏∑Œ ∞Àªˆ
			case NAMESEARCH:
				while(true) {
					System.out.print("∞Àªˆ«“ «–ª˝¿« ¿Ã∏ß >> ");
					name = scan.nextLine();
					if(patternCheck(name, NAMEPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
				}
				searchData = name;
				break;
			// «–π¯¿∏∑Œ ∞Àªˆ
			case IDSEARCH:
				while(true) {
					System.out.print("∞Àªˆ«“ «–ª˝¿« «–π¯ >> ");
					id = Integer.parseInt(scan.nextLine());
					if(patternCheck(Integer.toString(id), IDPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
				}
				searchData = String.valueOf(id);
				break;
			// µπæ∆∞°±‚
			case BACK:
				System.out.println("∞Àªˆ √Îº“");
				return;
		}
		
		// µ•¿Ã≈Õ∫£¿ÃΩ∫ø°º≠ ¡∂»∏
		list = DBController.stuModelSearch(searchData, searchType);

		// ¡∏¿Á ø©∫Œ »Æ¿Œ
		if(list.size()<=0) {
			System.out.println("µ•¿Ã≈Õ∞° æ¯Ω¿¥œ¥Ÿ.");
			return;
		}
		
		// ∞Àªˆ ¥ÎªÛ ¡§∫∏ √‚∑¬
		for (StudentModel data : list) {
			System.out.println(data);
		}
	}

	// µ•¿Ã≈Õ ªË¡¶
	private static void StuModelDel() {
		final int IDSEARCH = 1, BACK = 2;
		int id = 0;
		String deleteData = null;	// ªË¡¶«“ µ•¿Ã≈Õ
		int deleteType = 0;			// ªË¡¶«œ∑¡∞Ì ∞Àªˆ«— µ•¿Ã≈Õ¿« ≈∏¿‘
		int result = 0;

		deleteType = selectMenu(DELETEITEM);
		switch(deleteType) {
			//«–π¯¿∏∑Œ ∞Àªˆ«œø© ªË¡¶
			case IDSEARCH: 	
				while(true) {
					System.out.print("ªË¡¶«“ «–ª˝¿« «–π¯ >> ");
					id = Integer.parseInt(scan.nextLine());
					if(patternCheck(Integer.toString(id), IDPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
				}
				deleteData = String.valueOf(id);
				break;
			// µπæ∆∞°±‚
			case BACK:
				System.out.println("ªË¡¶ √Îº“");
				return;
			}
		
		// µ•¿Ã≈Õ∫£¿ÃΩ∫ø°º≠ ªË¡¶
		result = DBController.stuModelDel(deleteData, deleteType);
		
		// º∫∞¯ ø©∫Œ
		if(result != 0) System.out.println(deleteData + " «–ª˝ ªË¡¶ øœ∑·");
		else System.out.println(deleteData + " «–ª˝ ªË¡¶ Ω«∆–");
		
		return;
	}

	// µ•¿Ã≈Õ ºˆ¡§
	private static void StuModelUpdate() {
		final int SOC = 1, PHY = 2, LING = 3, BACK = 4;
		int id = 0;
		int sociology = 0;
		int physics = 0;
		int linguistics = 0;

		List<StudentModel> list = new ArrayList<StudentModel>();
		int category = 0;
		int updateData = 0;
		int result = 0;
		
		// «–ª˝ ∞Àªˆ
		while(true) {
			System.out.print("º∫¡§ ¡§¡§«“ «–ª˝¿« «–π¯ ¿‘∑¬ >> ");
			id = Integer.parseInt(scan.nextLine());
			if(patternCheck(Integer.toString(id), IDPATTERN)) break;
			else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
		}
		
		// ¥ÎªÛ «–ª˝ ¡§∫∏ ¡∂»∏
		list = DBController.stuModelSearch(String.valueOf(id), 2);
		if(list.size()<=0) {
			System.out.println("µ•¿Ã≈Õ∞° æ¯Ω¿¥œ¥Ÿ.");
			return;
		}
		for (StudentModel data : list) {
			System.out.println(data);
		}
		
		StudentModel studentModel = list.get(0);

		// º∫¿˚ ¡§¡§«“ ∞˙∏Ò º±≈√
		category = selectMenu(UPDATEITEM);
		switch(category) {
			// ªÁ»∏«– ¡°ºˆ ¡§¡§
			case SOC:
				while(true) {
					System.out.print("ªÁ»∏«– ¡°ºˆ ¡§¡§ >> ");
					sociology = Integer.parseInt(scan.nextLine());
					if(patternCheck(Integer.toString(sociology), SCOREPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");					
				}
				studentModel.setSociology(sociology);
				updateData = sociology;
				break;
			// π∞∏Æ«– ¡°ºˆ ¡§¡§
			case PHY:
				while(true) {
					System.out.print("π∞∏Æ«– ¡°ºˆ ¡§¡§ >> ");
					physics = Integer.parseInt(scan.nextLine());
					if(patternCheck(Integer.toString(physics), SCOREPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
				}
				studentModel.setPhysics(physics);
				updateData = physics;
				break;
			// ææÓ«– ¡°ºˆ ¡§¡§
			case LING:
				while(true) {
					System.out.print("ææÓ«– ¡°ºˆ ¡§¡§ >> ");
					linguistics = Integer.parseInt(scan.nextLine());
					if(patternCheck(Integer.toString(linguistics), SCOREPATTERN)) break;
					else System.out.println("¥ŸΩ√ ¿‘∑¬«œººø‰.");
				}
				studentModel.setLinguistics(linguistics);
				updateData = linguistics;
				break;
			// µπæ∆∞°±‚
			case BACK:
				System.out.println("ºˆ¡§ √Îº“");
				return;
		}
		
		// ºˆ¡§«— ¡°ºˆø° µ˚∂Û º∫¿˚ ¡§¡§
		studentModel.calTotal();
		studentModel.calAvg();
		studentModel.calGrade();
		
		// µ•¿Ã≈Õ∫£¿ÃΩ∫ø°º≠ ºˆ¡§
		result = DBController.stuModelUpdate(studentModel, category, updateData);
		
		// º∫∞¯ ø©∫Œ
		if(result != 0) System.out.println("¡§¡§ øœ∑·");
		else System.out.println("¡§¡§ Ω«∆–");
		
		return;
	}

	// µ•¿Ã≈Õ ¡§∑ƒ
	private static void StuModelSort() {
		int order = 0;
		boolean flag = false;
		List<StudentModel> list = new ArrayList<StudentModel>();
		
		// ¡§∑ƒ πÊΩƒ º±≈√
		while(!flag) {
			System.out.println("√—¡°¿ª ±‚¡ÿ¿∏∑Œ 1. ≥ª∏≤¬˜º¯   2. ø¿∏ß¬˜º¯");
			System.out.print("¡§∑ƒ πÊΩƒ º±≈√ >> ");
			
			try {				
				order = Integer.parseInt(scan.nextLine());
			} catch(InputMismatchException e) {
				System.out.println("º˝¿⁄∑Œ ¿‘∑¬«œººø‰.");
				continue;
			} catch(Exception e) {
				System.out.println("º˝¿⁄∑Œ ¿‘∑¬«œººø‰.");
				continue;
			}
			
			if(order == 1 || order == 2) flag = true;
			else System.out.println("¡∏¿Á«œ¥¬ «◊∏Ò π¯»£∏¶ ¿‘∑¬«œººø‰.");
		}
		
		// µ•¿Ã≈Õ∫£¿ÃΩ∫ ¡∂»∏ - ¡§∑ƒ
		list = DBController.stuModelSort(order);
		
		// ¡∏¿Á ø©∫Œ »Æ¿Œ
		if(list.size() <=0) {
			System.out.println("µ•¿Ã≈Õ∞° æ¯Ω¿¥œ¥Ÿ");
			return;
		}
		
		// ¡§∑ƒµ» ∏ÆΩ∫∆Æ √‚∑¬
		for(StudentModel data : list) {
			System.out.println(data);
		}
	}
}
